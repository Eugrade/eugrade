/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/classes.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./dist/css/main.css":
/*!***************************!*\
  !*** ./dist/css/main.css ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./dist/css/main.css?");

/***/ }),

/***/ "./node_modules/_ant-design-vue@1.3.17@ant-design-vue/dist/antd.css":
/*!**************************************************************************!*\
  !*** ./node_modules/_ant-design-vue@1.3.17@ant-design-vue/dist/antd.css ***!
  \**************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("// removed by extract-text-webpack-plugin\n\n//# sourceURL=webpack:///./node_modules/_ant-design-vue@1.3.17@ant-design-vue/dist/antd.css?");

/***/ }),

/***/ "./src/classes.js":
/*!************************!*\
  !*** ./src/classes.js ***!
  \************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _dist_css_main_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../dist/css/main.css */ \"./dist/css/main.css\");\n/* harmony import */ var _dist_css_main_css__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_dist_css_main_css__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var ant_design_vue_dist_antd_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ant-design-vue/dist/antd.css */ \"./node_modules/_ant-design-vue@1.3.17@ant-design-vue/dist/antd.css\");\n/* harmony import */ var ant_design_vue_dist_antd_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(ant_design_vue_dist_antd_css__WEBPACK_IMPORTED_MODULE_1__);\n//引入 css 文件\n\n\n\n\nvar antd = new Vue({\n    el: '#app',\n    data() {\n        return {\n            lang: [],\n            user: {\n                info: [],\n                id: cookie.get('logged_in_id'),\n                joined_classes: [],\n                classes_info: [],\n                token: null\n            },\n            spinning: {\n                left: true,\n                center: false,\n                right: false\n            },\n            opened_class_info: {\n                id: null,\n                status: 0,\n                name: null,\n                des: null,\n                supername: null,\n                superid: null,\n                members: [],\n                img: null,\n                index: null\n            },\n            add: {\n                visible: false,\n                confirm_create_loading: false,\n                class: {\n                    name: null,\n                        des: null\n                },\n            },\n            multi: {\n                data_status: false,\n                visible: false,\n                confirm_multi_loading: false,\n                count: 0,\n                names: '',\n                pwd: '',\n                names_check: true,\n                return: {\n                    fails: [],\n                    successes: []\n                }\n            },\n            join: {\n                visible: false,\n                confirm_join_loading: false,\n                id: null\n            },\n            opened_member_info: {\n                status: 0,\n                info: null,\n                superid: null\n            },\n            remove_id: null,\n            member_marked: false,\n            class_marked: false,\n            mark: {\n                id: null\n            },\n            edit: {\n                confirm_edit_class_loading: false,\n                confirm_edit_user_loading: false,\n                class: {\n                    visible: false,\n                        name: null,\n                        des: null,\n                        percent: 0,\n                        id: null,\n                        display_percent: false\n                },\n                user: {\n                    visible: false,\n                    name: '',\n                    email: '',\n                    pwd: '',\n                    percent: 0,\n                    id: null,\n                    display_percent: false\n                }\n            },\n            invite: {\n                id: null,\n                visible: false\n            }\n        }\n    },\n    mounted() {\n        this.lang = lang_json;\n        axios.get('../interact/select_users.php?type=class&id=' + cookie.get('logged_in_id') + '&form=all')\n            .then(re => {\n                this.user.info = re.data[0];\n                if (!!re.data[0].class) {\n                    this.user.joined_classes = re.data[0].class.split(',');\n                    axios.get('../interact/select_classes.php?type=class&id=' + re.data[0].class + '&form=all')\n                        .then(res => {\n                            this.user.classes_info = res.data;\n                            this.spinning.left = false;\n                        })\n                } else {\n                    //若不存在班级信息\n                    this.spinning.left = false;\n                }\n                $('#main-container').attr('style', ''); //避免爆代码\n            })\n            .then(() => {\n                axios.get('../interact/get_token.php?user=' + parseInt(this.user.id) + '&email=' + this.user.info.email)\n                    .then(res => {\n                        this.user.token = res.data.key;\n                    })\n            });\n    },\n    methods: {\n        //创建/加入新班级后重新加载列表\n        get_all_classes() {\n            axios.get('../interact/select_users.php?type=class&id=' + cookie.get('logged_in_id') + '&form=single')\n                .then(re => {\n                    this.user.joined_classes = re.data.class.split(',');\n                    if (!!re.data.class) {\n                        axios.get('../interact/select_classes.php?type=class&id=' + re.data.class + '&form=all')\n                            .then(res => {\n                                this.user.classes_info = res.data;\n                                this.spinning.left = false;\n                            })\n                    } else {\n                        this.user.joined_classes = [];\n                        this.user.classes_info = [];\n                    }\n                });\n        },\n        //判断是否为班级管理员，输出特殊样式\n        class_super(index) {\n            if (parseInt(this.user.classes_info[index].super) == this.user.id) {\n                return 'super';\n            } else {\n                return '';\n            }\n        },\n        //显示加入/创建班级的 modal\n        add_class() {\n            this.add.visible = true;\n        },\n        join_class() {\n            this.join.visible = true;\n        },\n        //处理创建班级\n        handle_create_submit() {\n            this.add.confirm_create_loading = true;\n            var formData = new FormData();\n            formData.append('name', this.add.class.name);\n            formData.append('des', this.add.class.des);\n            formData.append('super', this.user.id);\n\n            $.ajax({\n                url: '../interact/create_classes.php',\n                type: \"POST\",\n                data: formData,\n                cache: false,\n                dataType: 'json',\n                processData: false,\n                contentType: false,\n                success: function (data) {\n                    if (data.status) {\n                        antd.$message.success(data.mes);\n                        antd.add.confirm_create_loading = false;\n                        antd.handle_create_cancel();\n                        antd.get_all_classes();\n                        antd.add.class.name = null;\n                        antd.add.class.des = null;\n                    } else {\n                        antd.$message.error(data.mes);\n                        antd.add.confirm_create_loading = false;\n                    }\n                }\n            });\n        },\n        //关闭 modal\n        handle_create_cancel() {\n            this.add.visible = false\n        },\n        //关闭 modal\n        handle_join_cancel() {\n            this.join.visible = false\n        },\n        //处理加入班级\n        handle_join_submit() {\n            this.join.confirm_join_loading = true;\n            var formData = new FormData();\n            formData.append('class_id', this.join.id);\n            formData.append('stu_id', this.user.id);\n\n            $.ajax({\n                url: '../interact/join_classes.php',\n                type: \"POST\",\n                data: formData,\n                cache: false,\n                dataType: 'json',\n                processData: false,\n                contentType: false,\n                success: function (data) {\n                    if (data.status) {\n                        antd.$message.success(data.mes);\n                        antd.join.confirm_join_loading = false;\n                        antd.handle_join_cancel();\n                        antd.get_all_classes();\n                        antd.join.id = null;\n                    } else {\n                        antd.$message.error(data.mes);\n                        antd.join.confirm_join_loading = false;\n                    }\n                }\n            });\n        },\n        //点击班级获取信息在 center 列展示\n        open_class_info(index) {\n            //选中增加 class，删除其余选中\n            $('.class-item').each(function () {\n                $(this).removeClass('clicked');\n            });\n            $('#class' + index).addClass('clicked');\n\n            this.opened_class_info.index = index;\n\n            this.spinning.center = true;\n            this.edit.class.name = this.opened_class_info.name = this.user.classes_info[index].name;\n            this.edit.class.des = this.opened_class_info.des = this.user.classes_info[index].des;\n            this.edit.class.id = this.opened_class_info.id = this.user.classes_info[index].id;\n            axios.get('../interact/select_users.php?type=name&id=' + parseInt(this.user.classes_info[index].super) + '&form=single')\n                .then(rec => {\n                    this.opened_class_info.supername = rec.data.name;\n                    this.opened_class_info.superid = this.user.classes_info[index].super;\n\n                    axios.get('../interact/select_classes.php?type=member&id=' + this.opened_class_info.id + '&form=single')\n                        .then(recc => {\n                            axios.get('../interact/select_users.php?type=name&id=' + recc.data.member + '&form=all')\n                                .then(rec => {\n                                    this.opened_class_info.members = rec.data;\n                                    this.opened_class_info.img = this.user.classes_info[index].img;\n                                    this.opened_class_info.status = 1;\n                                    this.check_mark(this.opened_class_info.id, 'class');\n                                    this.spinning.center = false;\n                                });\n                        })\n                });\n        },\n        //获取用户类型\n        get_level(type) {\n            if (parseInt(type) == 1) {\n                return 'Student';\n            } else {\n                return 'Teacher';\n            }\n        },\n        //点击用户获取信息在 right 列展示\n        open_member_info(id) {\n            //选中增加 class，删除其余选中\n            $('.center .class-item').each(function () {\n                $(this).removeClass('clicked');\n            });\n            $('#member' + id).addClass('clicked');\n\n            this.spinning.right = true;\n            axios.get('../interact/select_users.php?type=name&form=all&id=' + id)\n                .then(resp => {\n                    this.opened_member_info.info = resp.data[0];\n                    this.opened_member_info.status = 1;\n                    this.opened_member_info.superid = this.opened_class_info.superid;\n                    this.opened_member_info.classid = this.opened_class_info.id;\n                    this.check_mark(this.opened_member_info.info.id, 'user'); //判断是否收藏用户\n                    this.spinning.right = false;\n                    this.edit.user.id = this.opened_member_info.info.id;\n                    this.edit.user.name = this.opened_member_info.info.name;\n                    this.edit.user.email = this.opened_member_info.info.email;\n                    this.edit.user.avatar = this.opened_member_info.info.avatar;\n                })\n        },\n        //转换时间戳为时间格式\n        get_date(timeStamp) {\n            var date = new Date();\n            date.setTime(timeStamp * 1000);\n            var y = date.getFullYear();\n            var m = date.getMonth() + 1;\n            m = m < 10 ? ('0' + m) : m;\n            var d = date.getDate();\n            d = d < 10 ? ('0' + d) : d;\n            var h = date.getHours();\n            h = h < 10 ? ('0' + h) : h;\n            var minute = date.getMinutes();\n            var second = date.getSeconds();\n            minute = minute < 10 ? ('0' + minute) : minute;\n            second = second < 10 ? ('0' + second) : second;\n            return y + '-' + m + '-' + d + ' ' + h + ':' + minute + ':' + second;\n        },\n        stu_remove(class_id) {\n            this.remove_id = class_id;\n            this.$confirm({\n                title: 'Do you want to leave the class?',\n                content: 'the process can not be redone',\n                onOk() {\n                    var formData = new FormData();\n                    formData.append('class_id', antd.remove_id);\n                    formData.append('stu_id', antd.user.id);\n                    formData.append('from', 'student');\n\n                    $.ajax({\n                        url: '../interact/exit_classes.php',\n                        type: \"POST\",\n                        data: formData,\n                        cache: false,\n                        dataType: 'json',\n                        processData: false,\n                        contentType: false,\n                        success: function (data) {\n                            if (data.status) {\n                                antd.$message.success(data.mes);\n                                antd.get_all_classes();\n                                antd.opened_member_info.status = 0;\n                                antd.opened_class_info.status = 0;\n                            } else {\n                                antd.$message.error(data.mes);\n                            }\n                        }\n                    });\n                },\n            });\n        },\n        tea_remove(class_id, stu_id) {\n            this.remove_id = class_id;\n            this.remove_stu_id = stu_id;\n            this.$confirm({\n                title: 'Do you want to remove this student from the class?',\n                content: 'the process can not be redone',\n                onOk() {\n                    var formData = new FormData();\n                    formData.append('class_id', antd.remove_id);\n                    formData.append('stu_id', antd.remove_stu_id);\n                    formData.append('from', 'teacher');\n                    formData.append('tea_id', antd.user.id);\n\n                    $.ajax({\n                        url: '../interact/exit_classes.php',\n                        type: \"POST\",\n                        data: formData,\n                        cache: false,\n                        dataType: 'json',\n                        processData: false,\n                        contentType: false,\n                        success: function (data) {\n                            if (data.status) {\n                                antd.$message.success(data.mes);\n                                antd.opened_member_info.status = 0;\n                                antd.opened_class_info.status = 0;\n                            } else {\n                                antd.$message.error(data.mes);\n                            }\n                        }\n                    });\n                }\n            })\n        },\n        //判断当前展示用户是否被标记\n        check_mark(id, type) {\n            if (type == 'user') {\n                axios.get('../interact/select_marks.php?form=user&marker=' + this.user.id)\n                    .then(res => {\n                        this.member_marked = false; //.user 在数组为空时无法获取,直接初始值 false\n                        if (!!res.data[id.toString()].user) {\n                            this.member_marked = true;\n                        } else {\n                            this.member_marked = false;\n                        }\n                    })\n            } else {\n                axios.get('../interact/select_marks.php?form=class&marker=' + this.user.id)\n                    .then(res => {\n                        this.class_marked = false; //.class 在数组为空时无法获取,直接初始值 false\n                        if (!!res.data[id.toString()].class) {\n                            this.class_marked = true;\n                        } else {\n                            this.class_marked = false;\n                        }\n                    })\n            }\n        },\n        //标记收藏\n        mark_process(id, type) {\n            this.mark.id = id;\n            if (type == 'user') {\n                this.$confirm({\n                    title: 'Do you want to mark this student?',\n                    content: 'you can remove the mark by clicking the button again',\n                    onOk() {\n                        var formData = new FormData();\n                        formData.append('stu_id', antd.mark.id);\n                        formData.append('type', 'user');\n                        formData.append('marker', antd.user.id);\n\n                        $.ajax({\n                            url: '../interact/create_mark.php',\n                            type: \"POST\",\n                            data: formData,\n                            cache: false,\n                            dataType: 'json',\n                            processData: false,\n                            contentType: false,\n                            success: function (data) {\n                                if (data.status) {\n                                    antd.$message.success(data.mes);\n                                    antd.check_mark(antd.opened_member_info.info.id, 'user');\n                                } else {\n                                    antd.$message.error(data.mes);\n                                }\n                            }\n                        });\n                    }\n                })\n            } else {\n                this.$confirm({\n                    title: 'Do you want to mark this class?',\n                    content: 'you can remove the mark later',\n                    onOk() {\n                        var formData = new FormData();\n                        formData.append('class_id', antd.mark.id);\n                        formData.append('type', 'class');\n                        formData.append('marker', antd.user.id);\n\n                        $.ajax({\n                            url: '../interact/create_mark.php',\n                            type: \"POST\",\n                            data: formData,\n                            cache: false,\n                            dataType: 'json',\n                            processData: false,\n                            contentType: false,\n                            success: function (data) {\n                                if (data.status) {\n                                    antd.$message.success(data.mes);\n                                    antd.check_mark(antd.opened_class_info.id, 'class');\n                                } else {\n                                    antd.$message.error(data.mes);\n                                }\n                            }\n                        });\n                    }\n                })\n            }\n        },\n        //删除标记\n        demark_process(id, type) {\n            this.mark.id = id;\n            if (type == 'user') {\n                this.$confirm({\n                    title: 'Do you want to remove the mark of this student?',\n                    content: 'you can mark back by clicking the button again',\n                    onOk() {\n                        var formData = new FormData();\n                        formData.append('stu_id', antd.mark.id);\n                        formData.append('type', 'user');\n                        formData.append('marker', antd.user.id);\n\n                        $.ajax({\n                            url: '../interact/delete_mark.php',\n                            type: \"POST\",\n                            data: formData,\n                            cache: false,\n                            dataType: 'json',\n                            processData: false,\n                            contentType: false,\n                            success: function (data) {\n                                if (data.status) {\n                                    antd.$message.success(data.mes);\n                                    antd.check_mark(antd.opened_member_info.info.id, 'user');\n                                } else {\n                                    antd.$message.error(data.mes);\n                                }\n                            }\n                        });\n                    }\n                })\n            } else {\n                this.$confirm({\n                    title: 'Do you want to remove the mark of this class?',\n                    content: 'you are able to mark back',\n                    onOk() {\n                        var formData = new FormData();\n                        formData.append('class_id', antd.mark.id);\n                        formData.append('type', 'class');\n                        formData.append('marker', antd.user.id);\n\n                        $.ajax({\n                            url: '../interact/delete_mark.php',\n                            type: \"POST\",\n                            data: formData,\n                            cache: false,\n                            dataType: 'json',\n                            processData: false,\n                            contentType: false,\n                            success: function (data) {\n                                if (data.status) {\n                                    antd.$message.success(data.mes);\n                                    antd.check_mark(antd.opened_class_info.id, 'class');\n                                } else {\n                                    antd.$message.error(data.mes);\n                                }\n                            }\n                        });\n                    }\n                })\n            }\n\n        },\n        //处理修改班级\n        handle_edit_class_submit() {\n            this.edit.confirm_edit_class_loading = true;\n            var formData = new FormData();\n            formData.append('class_id', this.edit.class.id);\n            formData.append('name', this.edit.class.name);\n            formData.append('des', this.edit.class.des);\n            formData.append('super', this.user.id);\n            formData.append('type', 'info');\n\n            $.ajax({\n                url: '../interact/edit_classes.php',\n                type: \"POST\",\n                data: formData,\n                cache: false,\n                dataType: 'json',\n                processData: false,\n                contentType: false,\n                success: function (data) {\n                    if (data.status) {\n                        antd.$message.success(data.mes);\n                        antd.edit.confirm_edit_class_loading = false;\n                        antd.handle_edit_class_cancel();\n                        antd.get_all_classes(); //重新获取班级列表\n                        antd.edit.class.name = null; //清空编辑框\n                        antd.edit.class.des = null;\n                        antd.opened_class_info.status = 0; //关闭中栏\n                    } else {\n                        antd.$message.error(data.mes);\n                        antd.edit.confirm_edit_class_loading = false;\n                    }\n                }\n            });\n        },\n        //关闭 modal\n        handle_edit_class_cancel() {\n            this.edit.class.visible = false;\n        },\n        upload_class_img(token) {\n            if ($(\"#class_img\")[0].files[0] !== undefined) {\n                if ($(\"#class_img\")[0].files[0].size <= 2000000) {\n                    this.edit.confirm_edit_class_loading = true;\n                    this.edit.class.display_percent = true;\n                    var get_suffix = function (name) {\n                        var index = name.lastIndexOf('.');\n                        return name.substring(index);\n                    }\n                    var pre_name = new Date().getTime();\n                    var suffix = get_suffix($(\"#class_img\")[0].files[0].name);\n                    var name = pre_name + suffix;\n                    var config = {\n                        useCdnDomain: true\n                    };\n                    var putExtra = {\n                        mimeType: [\"image/png\", \"image/jpeg\"]\n                    };\n\n                    var file = $(\"#class_img\")[0].files[0];\n                    var observable = qiniu.upload(file, name, token, putExtra, config)\n                    var observer = {\n                        next(res) {\n                            antd.edit.class.percent = res.total.percent;\n                        },\n                        error(err) {\n                            antd.$message.error(err.message);\n                            antd.edit.confirm_edit_class_loading = false;\n                            antd.edit.class.display_percent = false;\n                        },\n                        complete(res) {\n                            var formData = new FormData();\n                            formData.append('class_id', antd.edit.class.id);\n                            formData.append('super', antd.user.id);\n                            formData.append('type', 'img');\n                            formData.append('url', 'https://static.ouorz.com/' + name)\n\n                            $.ajax({\n                                url: '../interact/edit_classes.php',\n                                type: \"POST\",\n                                data: formData,\n                                cache: false,\n                                dataType: 'json',\n                                processData: false,\n                                contentType: false,\n                                success: function (data) {\n                                    if (data.status) {\n                                        antd.$message.success(data.mes);\n                                        antd.edit.confirm_edit_class_loading = false;\n                                        antd.handle_edit_class_cancel();\n                                        antd.get_all_classes(); //重新获取班级列表\n                                        /* 清空编辑内容 */\n                                        antd.edit.class.display_percent = false;\n                                        antd.edit.class.name = null;\n                                        antd.edit.class.des = null;\n                                        antd.edit.class.id = null;\n                                        antd.edit.class.percent = 0;\n                                        antd.edit.class.display_percent = false;\n                                        $(\"#class_img\").val('');\n                                        /* 结束清空编辑内容 */\n                                        antd.opened_class_info.status = 0; //关闭中栏\n                                    } else {\n                                        antd.$message.error(data.mes);\n                                        antd.edit.confirm_edit_class_loading = false;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    var subscription = observable.subscribe(observer);\n                } else {\n                    antd.$message.error('This img exceeded 2MB upload limit');\n                }\n            } else {\n                antd.$message.error('No img selected');\n            }\n        },\n        //处理修改用户信息\n        handle_edit_user_submit(type) {\n            this.edit.confirm_edit_user_loading = true;\n            var formData = new FormData();\n            formData.append('user_id', this.edit.user.id);\n            formData.append('name', this.edit.user.name);\n            formData.append('email', this.edit.user.email);\n            if (type == 'teacher') {\n                formData.append('super', antd.user.id);\n            } else {\n                formData.append('pwd', antd.edit.user.pwd);\n            }\n            formData.append('type', 'info');\n\n            $.ajax({\n                url: '../interact/edit_users.php',\n                type: \"POST\",\n                data: formData,\n                cache: false,\n                dataType: 'json',\n                processData: false,\n                contentType: false,\n                success: function (data) {\n                    if (data.status) {\n                        antd.$message.success(data.mes);\n                        antd.edit.confirm_edit_user_loading = false;\n                        antd.handle_edit_user_cancel();\n                        antd.edit.user.name = null; //清空编辑框\n                        antd.edit.user.email = null;\n                        antd.opened_member_info.status = 0; //关闭右栏\n                        antd.opened_class_info.status = 0; //关闭中栏\n                    } else {\n                        antd.$message.error(data.mes);\n                        antd.edit.confirm_edit_user_loading = false;\n                    }\n                }\n            });\n        },\n        //关闭 modal\n        handle_edit_user_cancel() {\n            this.edit.user.visible = false;\n        },\n        upload_user_img(token, type) {\n            if ($(\"#user_img\")[0].files[0] !== undefined) {\n                if ($(\"#user_img\")[0].files[0].size <= 2000000) {\n                    this.edit.confirm_edit_user_loading = true;\n                    this.edit.user.display_percent = true;\n                    var get_suffix = function (name) {\n                        var index = name.lastIndexOf('.');\n                        return name.substring(index);\n                    }\n                    var pre_name = new Date().getTime();\n                    var suffix = get_suffix($(\"#user_img\")[0].files[0].name);\n                    var name = pre_name + suffix;\n                    var config = {\n                        useCdnDomain: true\n                    };\n                    var putExtra = {\n                        mimeType: [\"image/png\", \"image/jpeg\"]\n                    };\n\n                    var file = $(\"#user_img\")[0].files[0];\n                    var observable = qiniu.upload(file, name, token, putExtra, config)\n                    var observer = {\n                        next(res) {\n                            antd.edit.user.percent = Math.round(res.total.percent);\n                        },\n                        error(err) {\n                            antd.$message.error(err.message);\n                            antd.edit.confirm_edit_user_loading = false;\n                            antd.edit.user.display_percent = false;\n                        },\n                        complete(res) {\n                            var formData = new FormData();\n                            formData.append('user_id', antd.edit.user.id);\n                            if (type == 'teacher') {\n                                formData.append('super', antd.user.id);\n                            }\n                            formData.append('type', 'img');\n                            formData.append('url', 'https://static.ouorz.com/' + name)\n\n                            $.ajax({\n                                url: '../interact/edit_users.php',\n                                type: \"POST\",\n                                data: formData,\n                                cache: false,\n                                dataType: 'json',\n                                processData: false,\n                                contentType: false,\n                                success: function (data) {\n                                    if (data.status) {\n                                        antd.$message.success(data.mes);\n                                        antd.edit.confirm_edit_user_loading = false;\n                                        /* 清空编辑内容 */\n                                        antd.edit.user.display_percent = false;\n                                        antd.edit.user.name = null;\n                                        antd.edit.user.email = null;\n                                        antd.edit.user.id = null;\n                                        antd.edit.user.percent = 0;\n                                        antd.edit.user.display_percent = false;\n                                        $(\"#user_img\").val('');\n                                        /* 结束清空编辑内容 */\n                                        antd.handle_edit_user_cancel();\n                                        antd.opened_member_info.status = 0; //关闭右栏\n                                        antd.opened_class_info.status = 0; //关闭中栏\n                                    } else {\n                                        antd.$message.error(data.mes);\n                                        antd.edit.confirm_edit_user_loading = false;\n                                    }\n                                }\n                            });\n                        }\n                    }\n                    var subscription = observable.subscribe(observer);\n                } else {\n                    antd.$message.error('This img exceeded 2MB upload limit');\n                }\n            } else {\n                antd.$message.error('No img selected');\n            }\n        },\n        handle_invite(id) {\n            this.invite.id = 'cxk' + id;\n            this.invite.visible = true;\n        },\n        handle_invite_close() {\n            this.invite.visible = false;\n        },\n        reverse_order(key) {\n            switch (key) {\n                case 'classes':\n                    this.user.joined_classes = this.user.joined_classes.reverse();\n                    this.user.classes_info = this.user.classes_info.reverse();\n                    $('.left .class-item').each(function () {\n                        $(this).removeClass('clicked');\n                    });\n                    break;\n            }\n        },\n        //提交批量用户注册\n        handle_multi_submit() {\n            if (!this.multi.data_status) {\n                this.multi.names = '';\n                this.multi.names_check = true;\n\n                //获取全部姓名\n                $('input[name=multi_member]').each(function () {\n                    var temp_name = $(this).val();\n                    temp_name = temp_name.split(\"|\").join(\"\"); //删除分隔符\n                    if (temp_name !== '') { //删除分隔符后仍剩其他字符\n                        antd.multi.names = antd.multi.names + '|' + temp_name;\n                    } else {\n                        antd.multi.names_check = false;\n                    }\n                });\n\n                if (this.multi.names_check) {\n\n                    //获取全部用户昵称\n                    this.multi.names = this.multi.names.substr(1, (this.multi.names).length);\n\n                    var query_string = \"pwd=\" + this.multi.pwd + \"&names=\" + this.multi.names + \"&class_id=\" + this.opened_class_info.id + \"&user_id=\" + this.user.id;\n\n                    //提交请求\n                    axios.post(\n                            '../interact/multi_create_member.php',\n                            query_string\n                        )\n                        .then(res => {\n                            if (res.data.status) {\n                                //获取注册成功的用户名+邮箱与失败的用户名\n                                this.multi.return.fails = res.data.info.fails;\n                                this.multi.return.successes = res.data.info.successes;\n                                this.multi.data_status = true;\n                                this.$message.success(res.data.mes);\n                                this.open_class_info(this.opened_class_info.index);\n                            } else {\n                                this.multi.data_status = false;\n                                this.multi.confirm_multi_loading = false;\n                                this.multi.count = 0;\n                                this.multi.names = '';\n                                this.multi.names_check = true;\n                                this.multi.pwd = '';\n                                this.multi.return.fails = [];\n                                this.multi.return.successes = [];\n                                this.$message.error(res.data.mes);\n                            }\n                        })\n\n\n                } else {\n                    antd.$message.error('Invaild nickname, please avoid using special characters');\n                }\n            } else {\n                this.handle_multi_cancel();\n            }\n        },\n        handle_multi_cancel() {\n            this.multi.data_status = false;\n            this.multi.confirm_multi_loading = false;\n            this.multi.count = 0;\n            this.multi.names = '';\n            this.multi.names_check = true;\n            this.multi.pwd = '';\n            this.multi.return.fails = [];\n            this.multi.return.successes = [];\n            this.multi.visible = false;\n        },\n        add_multi_member() {\n            if ((this.multi.count + 1) < 50) {\n                this.multi.count += 1;\n            } else {\n                this.multi.count = 50;\n                antd.$message.error('You are only allow to create maximum 50 accounts at a time');\n            }\n        },\n        remove_multi_member() {\n            if ((this.multi.count - 1) > 0) {\n                this.multi.count -= 1;\n            } else {\n                this.multi.count = 0;\n            }\n        }\n    }\n});\n\n//# sourceURL=webpack:///./src/classes.js?");

/***/ })

/******/ });